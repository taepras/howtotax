{"version":3,"sources":["utils/TaxCalculation.js","components/D3Component.jsx","utils/display.js","components/StoryIndicator.jsx","App.js","reportWebVitals.js","index.js"],"names":["useNetIncome","income","expense","allowance","useMemo","Math","max","SvgContainer","styled","div","Fade","CartesianSvg","svg","D3Component","taxBrackets","padding","left","right","top","bottom","isPullTax","isActivateTax","setPullTax","x","transitionTime","enableTransition","useDimensions","onResize","observe","unobserve","width","height","entry","transitionDuration","d3Container","useRef","cleanedExpense","cleanedAllowance","min","netIncome","scaleIncome","useCallback","d3","domain","range","barWidth","scaleTaxRate","axisIncomeLeft","tickFormat","axisIncomeRight","axisTaxRate","generateTaxBracketsPathD","d","pathD","map","taxRate","minNetIncome","maxNetIncome","join","length","useLayoutEffect","current","select","attr","transition","duration","style","console","log","text","bracketLineGroups","selectAll","data","bracketLineGroupsEnter","enter","append","classed","merge","toString","replace","i","call","ref","id","className","transform","fill","fontSize","alignmentBaseline","textAnchor","fillOpacity","clip-path","onClick","numberWithCommas","StoryIndicatorContainer","StoryIndicatorItem","props","active","StoryIndicator","currentStep","totalSteps","steps","ChartContainer","SideContainer","Step","status","css","ContentContainer","PageContainer","ControlsContainer","Button","button","secondary","disabled","App","useState","setIncome","setExpense","setAllowance","setEnableTransition","currentNarrativeStep","setCurrentNarrativeStep","setActivateTax","taxFinal","sumTax","remainingNetIncome","bracketRange","useTaxCalculation","narrativeSteps","display","flexGrow","type","step","value","onChange","e","target","onMouseDown","onMouseUp","color","alignItems","textAlign","flexBasis","ceil","useEffect","marginBottom","sign","gap","justifyContent","borderRadius","backgroundColor","fontWeight","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b742755c.chunk.js","sourcesContent":["// export const useTaxCalc = ({income, expense, allowance}) => {\r\n//     return \r\n// }\r\n\r\nimport { useMemo } from \"react\"\r\n\r\nexport const useNetIncome = (income, expense, allowance) => {\r\n    return useMemo(() => {\r\n        return Math.max(0, income - expense - allowance);\r\n      }, [income, expense, allowance]);\r\n}\r\n\r\nexport const useTaxCalculation = (netIncome, taxBrackets) => {\r\n    return useMemo(() => {\r\n        let sumTax = 0;\r\n        let remainingNetIncome = netIncome;\r\n        for (let i in taxBrackets) {\r\n          let bracketRange =\r\n            taxBrackets[i].maxNetIncome - taxBrackets[i].minNetIncome;\r\n          let incomeInBracket = Math.min(remainingNetIncome, bracketRange);\r\n          let taxInBracket = incomeInBracket * taxBrackets[i].taxRate;\r\n          sumTax += taxInBracket;\r\n          remainingNetIncome -= bracketRange;\r\n          if (remainingNetIncome <= 0) break;\r\n        }\r\n        return sumTax;\r\n      }, [netIncome, taxBrackets]);\r\n}","import React, { useRef, useEffect, useLayoutEffect, useMemo, useCallback, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n// import { transition } from 'd3';\r\nimport useDimensions from \"react-cool-dimensions\";\r\nimport styled from 'styled-components';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { transition } from 'd3';\r\nimport { useNetIncome } from '../utils/TaxCalculation';\r\n\r\n\r\nconst SvgContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n`\r\n\r\nconst Fade = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 20%;\r\n    background: linear-gradient(to bottom, #222, #2220);\r\n`\r\n\r\nconst CartesianSvg = styled.svg`\r\n    & > g text {\r\n        transform: scale(1, -1);\r\n    }\r\n`\r\n\r\n// const transitionDuration = 1000\r\n\r\nexport const D3Component = ({\r\n    income,\r\n    expense,\r\n    allowance,\r\n    taxBrackets,\r\n    padding = {\r\n        left: 35,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 30,\r\n    },\r\n    isPullTax = false,\r\n    isActivateTax = true,\r\n    setPullTax = (x) => {},\r\n    transitionTime = 500,\r\n    enableTransition = true\r\n}) => {\r\n    const { observe, unobserve, width, height, entry } = useDimensions({\r\n        onResize: ({ observe, unobserve, width, height, entry }) => {\r\n            // Triggered whenever the size of the target is changed...\r\n\r\n            unobserve(); // To stop observing the current target element\r\n            observe(); // To re-start observing the current target element\r\n        },\r\n    });\r\n\r\n    const transitionDuration = useMemo(() => enableTransition ? transitionTime : 0, [enableTransition, transitionTime]);\r\n\r\n    const d3Container = useRef(null);\r\n\r\n    const cleanedExpense = useMemo(() => expense < (income - allowance) ? +expense : +Math.max(0, income - allowance), [income, expense]);\r\n    const cleanedAllowance = useMemo(() => Math.min(income, allowance), [income, allowance]);\r\n\r\n    const netIncome = useNetIncome(income, expense, allowance);\r\n\r\n    const scaleIncome = useCallback(\r\n        d3.scaleLinear()\r\n            .domain([0, Math.max(300_000, income * 1.4)])\r\n            .range([0, height - padding.bottom])\r\n        , [height, income, padding])\r\n\r\n    const barWidth = useMemo(() => width - (padding.left + padding.right), [width, padding]);\r\n\r\n    const scaleTaxRate = useCallback(\r\n        d3.scaleLinear()\r\n            .domain([0, 1])\r\n            .range([0, barWidth])\r\n        , [income, width])\r\n\r\n    const axisIncomeLeft = useMemo(() => d3.axisLeft(scaleIncome)\r\n        .tickFormat(d3.format(\".3s\"))\r\n        , [scaleIncome]);\r\n    const axisIncomeRight = useMemo(() => d3.axisRight(scaleIncome), [scaleIncome]);\r\n    const axisTaxRate = useMemo(() => d3.axisBottom(scaleTaxRate).tickFormat(d3.format('.0%'))\r\n        , [scaleTaxRate]);\r\n\r\n    const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n\r\n    const generateTaxBracketsPathD = d => {\r\n        let pathD = 'M 0 0 ';\r\n        pathD += taxBrackets.map((d) => {\r\n            return ''\r\n                + `L ${scaleTaxRate(d.taxRate)} ${scaleIncome(d.minNetIncome)} `\r\n                + `L ${scaleTaxRate(d.taxRate)} ${scaleIncome(d.maxNetIncome)} `\r\n        }).join('')\r\n        pathD += `L 0 ${scaleIncome(taxBrackets[taxBrackets.length - 1].maxNetIncome)} `\r\n        pathD += `Z`\r\n        return pathD;\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (d3Container.current) {\r\n\r\n            const svg = d3.select(d3Container.current);\r\n\r\n            svg.select('g.container')\r\n                .attr('transform', `translate(${padding.left}, ${padding.bottom})`);\r\n\r\n            svg.select('rect.net-income')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#08f')\r\n                .attr('height', Math.max(0, scaleIncome(netIncome)));\r\n\r\n            svg.select('rect.net-income-mask')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                // .style('fill', '#08f')\r\n                .attr('height', Math.max(0, scaleIncome(netIncome)));\r\n\r\n            console.log('netIncome + cleanedAllowance', netIncome + cleanedAllowance, cleanedAllowance, scaleIncome(cleanedAllowance))\r\n            svg.select('rect.expense')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#135')\r\n                .attr('y', scaleIncome(netIncome + cleanedAllowance))\r\n                .attr('height', Math.max(0, scaleIncome(cleanedExpense)));\r\n\r\n            svg.select('rect.allowance')\r\n                .attr('width', barWidth)\r\n                .attr('data-allowance', allowance)\r\n                .attr('data-callowance', cleanedAllowance)\r\n                .attr('data-sallowance', scaleIncome(cleanedAllowance))\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#147')\r\n                .attr('y', scaleIncome(netIncome))\r\n                .attr('height', Math.max(0, scaleIncome(cleanedAllowance)));\r\n\r\n            svg.select('text.net-income-text')\r\n                .text(`เงินได้สุทธิ`)// ${numberWithCommas(netIncome)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(netIncome / 2));\r\n\r\n            svg.select('text.net-expense-text')\r\n                .text(`ค่าลดหย่อน`)// ${numberWithCommas(allowance)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(netIncome + cleanedAllowance / 2));\r\n\r\n            svg.select('text.net-allowance-text')\r\n                .text(`ค่าใช้จ่าย`)// ${numberWithCommas(expense)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(income - expense / 2));\r\n\r\n            svg.select('path.tax-stairs-camouflage')\r\n                .attr('fill', '#222')\r\n                .transition().duration(transitionDuration)\r\n                .attr('opacity', isActivateTax ? 1 : 0)\r\n                .attr('d', generateTaxBracketsPathD)\r\n\r\n            svg.select('path.tax-stairs')\r\n                .attr('fill', '#f80')\r\n                .transition().duration(transitionDuration)\r\n                .attr('d', generateTaxBracketsPathD)\r\n                .attr('transform', isPullTax ? `translate(${-50}, 0)` : 'translate(0, 0)')\r\n                .style('opacity', isActivateTax && !isPullTax ? 1 : 0);\r\n\r\n            const bracketLineGroups = svg.select('g.tax-lines')\r\n                .selectAll('g')\r\n                .data(taxBrackets)\r\n\r\n            const bracketLineGroupsEnter = bracketLineGroups\r\n                .enter()\r\n                .append('g')\r\n                .classed('bracket', true)\r\n\r\n            bracketLineGroupsEnter.append('text').classed('bracket-rate-text', true)\r\n            bracketLineGroupsEnter.append('text').classed('bracket-min-text', true)\r\n            bracketLineGroupsEnter.append('rect').classed('bracket-rect', true)\r\n            bracketLineGroupsEnter.append('line').classed('bracket-line', true)\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('rect')\r\n                .attr('x', 0)   // d => scaleTaxRate(d.taxRate))\r\n                .attr('width', d => scaleTaxRate(d.taxRate))\r\n                .style('fill-opacity', 0)\r\n                .style('stroke', '#f80')\r\n                .style(\"stroke-dasharray\", \"3, 3\")\r\n                .transition().duration(transitionDuration)\r\n                .attr('y', d => scaleIncome(d.minNetIncome))\r\n                .attr('height', d => scaleIncome(d.maxNetIncome - d.minNetIncome))\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('line')\r\n                .attr('x1', 0)\r\n                .attr('x2', barWidth)\r\n                .style('stroke', '#f80')\r\n                .style(\"stroke-dasharray\", \"3, 3\")\r\n                .transition().duration(transitionDuration)\r\n                // .style('stroke-opacity', '0.4')\r\n                .attr('y1', d => scaleIncome(d.maxNetIncome))\r\n                .attr('y2', d => scaleIncome(d.maxNetIncome))\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('text.bracket-rate-text')\r\n                .style('fill', '#fff')\r\n                .style('font-size', '0.75rem')\r\n                .style('text-anchor', 'end')\r\n                .attr('x', barWidth - 5)\r\n                .transition().duration(transitionDuration)\r\n                .text(d => `เริ่มคิดที่ ${numberWithCommas(d.minNetIncome)} บาท`)\r\n                .style('fill-opacity', (d, i) => i != 0 && scaleIncome(d.maxNetIncome - d.minNetIncome) > 20 ? 1 : 0)\r\n                .attr('y', d => -scaleIncome(d.minNetIncome) - 5)\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('text.bracket-min-text')\r\n                .style('fill', '#fff')\r\n                .style('font-size', '0.75rem')\r\n                .attr('x', d => scaleTaxRate(d.taxRate) + 5)\r\n                .transition().duration(transitionDuration)\r\n                .text(d => `ภาษี ${d.taxRate * 100}%`)\r\n                // .text(d => scaleIncome(d.maxNetIncome - d.minNetIncome) > 150\r\n                //     ? `เริ่มคิดที่ ${numberWithCommas(d.minNetIncome)} บาท`\r\n                //     : `${d.taxRate * 100}%`)\r\n                .style('fill-opacity', (d, i) => i != 0 && scaleIncome(d.maxNetIncome - d.minNetIncome) > 20 ? 1 : 0)\r\n                .attr('y', d => -scaleIncome(d.minNetIncome) - 5)\r\n\r\n            // AXES\r\n\r\n            d3.select(\"g.axis-income-bottom\")\r\n                .attr(\"transform\", `translate(0, 0)`)\r\n                .transition().duration(transitionDuration)\r\n                .call(axisIncomeLeft);\r\n\r\n            d3.select(\"g.axis-tax-rate\")\r\n                // .attr(\"transform\", `translate(-10, 0)`)\r\n                .transition().duration(transitionDuration)\r\n                .call(axisTaxRate);\r\n        }\r\n    }, [\r\n        width, height,\r\n        d3Container,\r\n        isPullTax,\r\n        barWidth,\r\n        scaleIncome,\r\n        netIncome,\r\n        income,\r\n        expense,\r\n        allowance,\r\n        taxBrackets,\r\n        padding,\r\n        axisIncomeLeft,\r\n        axisIncomeRight,\r\n        axisTaxRate,\r\n        cleanedAllowance,\r\n        cleanedExpense,\r\n        scaleTaxRate\r\n    ]);\r\n\r\n    return (<>\r\n        <SvgContainer ref={observe}>\r\n            <Fade />\r\n            <CartesianSvg\r\n                id=\"chart\"\r\n                className=\"d3-component\"\r\n                width={width}\r\n                height={height}\r\n                ref={d3Container}\r\n            >\r\n                <defs>\r\n                    <clipPath id=\"net-income-mask\">\r\n                        <rect className=\"net-income-mask\" />\r\n                    </clipPath>\r\n                </defs>\r\n                <g transform={`translate(0, ${height}) scale(1, -1)`}>\r\n                    <g className=\"container\">\r\n                        <rect className=\"net-income\" />\r\n                        <rect className=\"expense\" />\r\n                        <rect className=\"allowance\" />\r\n                        <text className=\"net-income-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <text className=\"net-expense-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <text className=\"net-allowance-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <g className=\"tax-lines\" />\r\n                        <g className=\"axis-income-top\" />\r\n                        <g className=\"axis-income-bottom\" />\r\n                        <g className=\"axis-tax-rate\" />\r\n                        <path className=\"tax-stairs-camouflage\" clip-path=\"url(#net-income-mask)\" onClick={() => setPullTax(false)} />\r\n                        <path className=\"tax-stairs\" clip-path=\"url(#net-income-mask)\" onClick={() => setPullTax(!isPullTax)} />\r\n                    </g>\r\n                </g>\r\n            </CartesianSvg>\r\n        </SvgContainer>\r\n    </>);\r\n}","export const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as d3 from 'd3'\r\n\r\nconst StoryIndicatorContainer = styled.div`\r\n    display: flex;\r\n    gap: 4px;\r\n`\r\n\r\nconst StoryIndicatorItem = styled.div`\r\n    height: 2px;\r\n    flex-grow: 1;\r\n    border-radius: 999;\r\n    background-color: #fff;\r\n    transition: opacity 0.2s;\r\n    opacity: ${props => props.active ? 1 : 0.4};\r\n`\r\n\r\nconst StoryIndicator = ({ currentStep = 0, totalSteps = 0, ...props }) => {\r\n    const steps = useMemo(() => d3.range(totalSteps), [totalSteps]);\r\n\r\n    return (\r\n        <>\r\n            <StoryIndicatorContainer {...props}>\r\n                {steps.map((d, i) => (\r\n                    <StoryIndicatorItem active={i <= currentStep} />\r\n                ))}\r\n            </StoryIndicatorContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StoryIndicator;","import { useEffect, useMemo, useState } from \"react\";\nimport { D3Component } from \"./components/D3Component\";\nimport styled, { css } from \"styled-components\";\nimport \"./App.css\";\nimport { numberWithCommas } from \"./utils/display\";\nimport { useNetIncome, useTaxCalculation } from \"./utils/TaxCalculation\";\nimport StoryIndicator from \"./components/StoryIndicator\";\n\nconst ChartContainer = styled.div`\n  /* padding: 30px; */\n  width: 100%;\n  /* height: 50vh; */\n  flex: 1;\n  position: relative;\n  transition: all 0.2s;\n`;\n\nconst SideContainer = styled.div`\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  @media (min-width: 768px) {\n    height: auto;\n    margin-left: 80px;\n    width: 400px;\n    max-width: 40%;\n    justify-content: center;\n  }\n`;\n\nconst Step = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n  transition: all 0.5s;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  ${(props) => {\n    switch (props.status) {\n      case -1:\n        return css`\n          transform: translateX(-100px);\n          opacity: 0;\n          pointer-events: none;\n        `;\n        break;\n      case 1:\n        return css`\n          transform: translateX(100px);\n          opacity: 0;\n          pointer-events: none;\n        `;\n        break;\n      default:\n        return css`\n          /* transform: translateX(-100px):  */\n          /* opacity: 0; */\n          /* pointer-events: none; */\n        `;\n        break;\n    }\n  }}\n`;\n\nconst StepOnly = styled.div`\n  ${(props) => {\n    switch (props.status) {\n      case -1:\n        return css`\n          transform: translateX(-100px);\n          opacity: 0;\n          pointer-events: none;\n        `;\n        break;\n      case 1:\n        return css`\n          transform: translateX(100px);\n          opacity: 0;\n          pointer-events: none;\n        `;\n        break;\n      default:\n        return css`\n          /* transform: translateX(-100px):  */\n          /* opacity: 0; */\n          /* pointer-events: none; */\n        `;\n        break;\n    }\n  }}\n`;\n\nconst ContentContainer = styled.div`\n  /* height: 200px; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-grow: 1;\n  position: relative;\n\n  @media (min-width: 768px) {\n    height: 240px;\n    flex-grow: 0;\n  }\n`;\n\nconst PageContainer = styled.div`\n  padding: 30px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    padding: 50px;\n  }\n`;\n\nconst ControlsContainer = styled.div`\n  /* margin-top: 30px; */\n  display: flex;\n  /* grid-template-columns: auto auto 80px; */\n  /* column-gap: 10px; */\n  /* row-gap: 15px; */\n  gap: 0.5rem;\n  flex-direction: column;\n  /* margin-bottom: 30px; */\n  align-content: center;\n\n  label {\n    white-space: nowrap;\n  }\n`;\n\nconst InputGroup = styled.div`\n  /* margin-bottom: 10px; */\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button`\n  border: none;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-family: \"Bai Jamjuree\", sans-serif;\n\n  ${(props) =>\n    props.secondary\n      ? css`\n          border: 1px white solid;\n          background-color: transparent;\n          color: white;\n        `\n      : css`\n          background-color: white;\n        `}\n\n  ${(props) =>\n    props.disabled &&\n    css`\n      opacity: 0.4;\n    `}\n`;\n\nfunction App() {\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [allowance, setAllowance] = useState(0);\n  const [enableTransition, setEnableTransition] = useState(true);\n  const [currentNarrativeStep, setCurrentNarrativeStep] = useState(-1);\n\n  const [isPullTax, setPullTax] = useState(false);\n  const [isActivateTax, setActivateTax] = useState(false);\n\n  const taxBrackets = [\n    {\n      minNetIncome: 0,\n      maxNetIncome: 150000,\n      taxRate: 0,\n    },\n    {\n      minNetIncome: 150000,\n      maxNetIncome: 300000,\n      taxRate: 0.05,\n    },\n    {\n      minNetIncome: 300000,\n      maxNetIncome: 500000,\n      taxRate: 0.1,\n    },\n    {\n      minNetIncome: 500000,\n      maxNetIncome: 750000,\n      taxRate: 0.15,\n    },\n    {\n      minNetIncome: 750000,\n      maxNetIncome: 1000000,\n      taxRate: 0.2,\n    },\n    {\n      minNetIncome: 1000000,\n      maxNetIncome: 2000000,\n      taxRate: 0.25,\n    },\n    {\n      minNetIncome: 2000000,\n      maxNetIncome: 5000000,\n      taxRate: 0.3,\n    },\n    {\n      minNetIncome: 5000000,\n      maxNetIncome: 999999999999,\n      taxRate: 0.35,\n    },\n  ];\n\n  const netIncome = useNetIncome(income, expense, allowance);\n  const taxFinal = useTaxCalculation(netIncome, taxBrackets);\n\n  const narrativeSteps = [\n    <>\n      <p>คำนวณภาษีเงินได้บุคคลธรรมดา</p>\n      <p></p>\n      <ControlsContainer>\n        <div style={{ display: \"flex\" }}>\n          <label style={{ flexGrow: 1 }}>รายได้ต่อปี</label>\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={income}\n            onChange={(e) => setIncome(e.target.value)}\n            style={{ width: \"80px\" }}\n          />\n        </div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"10000000\"\n          value={income}\n          onChange={(e) => setIncome(e.target.value)}\n          onMouseDown={() => setEnableTransition(false)}\n          onMouseUp={() => setEnableTransition(true)}\n        />\n      </ControlsContainer>\n    </>,\n\n    <>\n      <p>ค่าลดหย่อน default 100,000 บาท</p>\n      <ControlsContainer>\n        <div style={{ display: \"flex\" }}>\n          <label style={{ flexGrow: 1 }}>ค่าใช้จ่าย</label>\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={expense}\n            onChange={(e) => setExpense(e.target.value)}\n            style={{ width: \"80px\" }}\n          />\n        </div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100000\"\n          value={expense}\n          onChange={(e) => setExpense(e.target.value)}\n        />\n      </ControlsContainer>\n    </>,\n\n    <>\n      <p>ค่าลดหย่อน default 60,000 บาท</p>\n      <ControlsContainer>\n        <div style={{ display: \"flex\" }}>\n          <label style={{ flexGrow: 1 }}>ค่าลดหย่อน</label>\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={allowance}\n            onChange={(e) => setAllowance(e.target.value)}\n            style={{ width: \"80px\" }}\n          />\n        </div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1000000\"\n          value={allowance}\n          onChange={(e) => setAllowance(e.target.value)}\n        />\n      </ControlsContainer>\n    </>,\n\n    <>\n      <p>\n        \"<span style={{ color: \"#f90\" }}>ภาษีเงินได้บุคคลธรรมดา</span>\" คิดจาก \"\n        <span style={{ color: \"#0af\" }}>เงินได้สุทธิ</span>\"\n      </p>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div style={{ flexGrow: 1, textAlign: \"center\" }}>\n          <small style={{ color: \"#aaa\" }}>รายได้</small>\n          <br />\n          <small>{numberWithCommas(income)}</small>\n        </div>\n        <div>-</div>\n        <div style={{ flexGrow: 1, textAlign: \"center\" }}>\n          <small style={{ color: \"#aaa\" }}>ค่าใช้จ่าย</small>\n          <br />\n          <small>{numberWithCommas(expense)}</small>\n        </div>\n        <div>-</div>\n        <div style={{ flexGrow: 1, textAlign: \"center\" }}>\n          <small style={{ color: \"#aaa\" }}>ลดหย่อน</small>\n          <br />\n          <small>{numberWithCommas(allowance)}</small>\n        </div>\n        <div>=</div>\n        <div style={{ flexGrow: 1, textAlign: \"center\" }}>\n          <small style={{ color: \"#0af\" }}>เงินได้สุทธิ</small>\n          <br />\n          <b>{numberWithCommas(netIncome)} ฿</b>\n        </div>\n        {/* <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n          <small>ภาษี</small>\n          <br />\n          <b>{numberWithCommas(Math.ceil(taxFinal))} ฿</b>\n        </div> */}\n      </div>\n    </>,\n\n    <>\n      <p>\n        เมื่อคำนวณ \"<span style={{ color: \"#0af\" }}>เงินได้สุทธิ</span>\" แล้ว\n        จะต้องนำไปเข้า \"<span style={{ color: \"#f90\" }}>ขั้นบันไดภาษี</span>\"\n        เพื่อคำนวณภาษีออกมา\n      </p>\n\n      <p>สีส้มคือสัดส่วนภาษีที่คุณต้องเสีย</p>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n          <small style={{ color: \"#aaa\" }}>รายได้</small>\n          <br />\n          <span style={{ color: \"#aaa\" }}>{numberWithCommas(income)}</span>\n        </div>\n        <div>🠖</div>\n        <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n          <small style={{ color: \"#0af\" }}>เงินได้สุทธิ</small>\n          <br />\n          {numberWithCommas(netIncome)}\n        </div>\n        <div>🠖</div>\n        <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n          <small style={{ color: \"#f90\" }}>ภาษี</small>\n          <br />\n          <b>{numberWithCommas(Math.ceil(taxFinal))} ฿</b>\n        </div>\n      </div>\n    </>,\n  ];\n\n  useEffect(() => {\n    if (currentNarrativeStep == 1) {\n      if (expense == 0) setExpense(100_000);\n    }\n\n    if (currentNarrativeStep == 1) {\n      if (allowance == 0) setAllowance(60_000);\n    }\n\n    if (currentNarrativeStep == 4) {\n      setActivateTax(true);\n    } else {\n      setActivateTax(false);\n    }\n  }, [currentNarrativeStep, allowance, expense]);\n\n  return (\n    <PageContainer>\n      <StoryIndicator\n        currentStep={currentNarrativeStep}\n        totalSteps={narrativeSteps.length}\n        style={{ marginBottom: \"20px\" }}\n      />\n      <Step\n        status={Math.sign(-1 - currentNarrativeStep)}\n        style={{\n          gap: \"10px\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <h1>taxvisualizer</h1>\n        <p>คำนวณภาษีอย่างเห็นภาพ</p>\n        <Button\n          style={{\n            padding: \"8px 16px\",\n            borderRadius: 8,\n            backgroundColor: \"#f80\",\n            fontWeight: \"bold\",\n            fontSize: \"1rem\",\n          }}\n          onClick={() => setCurrentNarrativeStep(0)}\n        >\n          เริ่มเลย\n        </Button>\n      </Step>\n\n      {currentNarrativeStep >= 0 && (\n        <>\n          <ChartContainer>\n            <D3Component\n              income={income}\n              expense={expense}\n              allowance={allowance}\n              taxBrackets={taxBrackets}\n              isPullTax={isPullTax}\n              setPullTax={setPullTax}\n              enableTransition={enableTransition}\n              isActivateTax={isActivateTax}\n            />\n          </ChartContainer>\n          <SideContainer>\n            <ContentContainer>\n              {narrativeSteps.map((step, i) => (\n                <>\n                  <Step status={Math.sign(i - currentNarrativeStep)}>\n                    {step}\n                  </Step>\n                </>\n              ))}\n            </ContentContainer>\n            <div style={{ display: \"flex\", marginTop: \"20px\", gap: \"20px\" }}>\n              <Button\n                style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}\n                onClick={() =>\n                  setCurrentNarrativeStep(\n                    Math.max(currentNarrativeStep - 1, -1)\n                  )\n                }\n                // disabled={currentNarrativeStep === 0}\n                secondary\n              >\n                ย้อนกลับ\n              </Button>\n              <Button\n                style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}\n                onClick={() =>\n                  setCurrentNarrativeStep(\n                    Math.min(\n                      currentNarrativeStep + 1,\n                      narrativeSteps.length - 1\n                    )\n                  )\n                }\n                disabled={currentNarrativeStep === narrativeSteps.length - 1}\n              >\n                ต่อไป\n              </Button>\n            </div>\n          </SideContainer>\n        </>\n      )}\n    </PageContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}