{"version":3,"sources":["components/D3Component.jsx","utils/display.js","App.js","reportWebVitals.js","index.js"],"names":["SvgContainer","styled","div","Fade","CartesianSvg","svg","D3Component","income","expense","allowance","taxBrackets","padding","left","right","top","bottom","isPullTax","setPullTax","x","transitionTime","enableTransition","useDimensions","onResize","observe","unobserve","width","height","entry","transitionDuration","useMemo","d3Container","useRef","cleanedExpense","Math","max","cleanedAllowance","netIncome","scaleIncome","useCallback","d3","domain","range","barWidth","scaleTaxRate","axisIncomeLeft","tickFormat","axisIncomeRight","axisTaxRate","generateTaxBracketsPathD","d","pathD","map","taxRate","minNetIncome","maxNetIncome","join","length","useLayoutEffect","current","select","attr","transition","duration","style","console","log","text","bracketLineGroups","selectAll","data","bracketLineGroupsEnter","enter","append","classed","merge","toString","replace","i","call","ref","id","className","transform","fill","fontSize","alignmentBaseline","textAnchor","fillOpacity","clip-path","onClick","numberWithCommas","ChartContainer","SideContainer","PageContainer","ControlsContainer","App","useState","setIncome","setExpense","setAllowance","setEnableTransition","taxFinal","sumTax","remainingNetIncome","bracketRange","min","type","value","onChange","e","target","onMouseDown","onMouseUp","step","display","marginTop","flexGrow","flexBasis","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e3b4414.chunk.js","sourcesContent":["import React, { useRef, useEffect, useLayoutEffect, useMemo, useCallback, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n// import { transition } from 'd3';\r\nimport useDimensions from \"react-cool-dimensions\";\r\nimport styled from 'styled-components';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { transition } from 'd3';\r\n\r\n\r\nconst SvgContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n`\r\n\r\nconst Fade = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 20%;\r\n    background: linear-gradient(to bottom, #222, #2220);\r\n`\r\n\r\nconst CartesianSvg = styled.svg`\r\n    & > g text {\r\n        transform: scale(1, -1);\r\n    }\r\n`\r\n\r\n// const transitionDuration = 1000\r\n\r\nexport const D3Component = ({\r\n    income,\r\n    expense,\r\n    allowance,\r\n    taxBrackets,\r\n    // width = 800,\r\n    // height = 500,\r\n    padding = {\r\n        left: 35,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 50,\r\n    },\r\n    isPullTax = false,\r\n    setPullTax = (x) => {},\r\n    transitionTime = 500,\r\n    enableTransition = true\r\n}) => {\r\n    const { observe, unobserve, width, height, entry } = useDimensions({\r\n        onResize: ({ observe, unobserve, width, height, entry }) => {\r\n            // Triggered whenever the size of the target is changed...\r\n\r\n            unobserve(); // To stop observing the current target element\r\n            observe(); // To re-start observing the current target element\r\n        },\r\n    });\r\n\r\n    const transitionDuration = useMemo(() => enableTransition ? transitionTime : 0, [enableTransition, transitionTime]);\r\n\r\n    // const { width, height, chartContainer } = useResizeDetector();\r\n\r\n    const d3Container = useRef(null);\r\n\r\n    // const { observe, unobserve, width, height, entry } = useDimensions({\r\n    //     onResize: ({ observe, unobserve, width, height, entry }) => {\r\n    //         // Triggered whenever the size of the target is changed...\r\n\r\n    //         unobserve(); // To stofp observing the current target element\r\n    //         observe(); // To re-start observing the current target element\r\n    //     },\r\n    // });\r\n\r\n    // const height = d3Container.current.clientHeight;\r\n    // const width = d3Container.current.clientWidth\r\n    // const [width, setWidth] = useState(0)\r\n    // const [height, setHeight] = useState(0)\r\n\r\n    // useLayoutEffect(() => {\r\n    //     if (d3Container.current) {\r\n    //         setWidth(d3Container.current.parentElement.offsetWidth);\r\n    //         setHeight(d3Container.current.parentElement.offsetHeight);\r\n    //     }\r\n    // }, [d3Container])\r\n\r\n    const cleanedExpense = useMemo(() => expense < (income - allowance) ? +expense : +Math.max(0, income - allowance), [income, expense]);\r\n    const cleanedAllowance = useMemo(() => allowance < income ? +allowance : +income, [income, allowance]);\r\n\r\n    const netIncome = useMemo(() => {\r\n        return Math.max(income - expense - allowance, 0);\r\n    }, [income, expense, allowance]);\r\n\r\n    const scaleIncome = useCallback(\r\n        d3.scaleLinear()\r\n            .domain([0, Math.max(300_000, income * 1.4)])\r\n            .range([0, height - padding.bottom])\r\n        , [height, income, padding])\r\n\r\n    const barWidth = useMemo(() => width - (padding.left + padding.right), [width, padding]);\r\n\r\n    const scaleTaxRate = useCallback(\r\n        d3.scaleLinear()\r\n            .domain([0, 1])\r\n            .range([0, barWidth])\r\n        , [income, width])\r\n\r\n    const axisIncomeLeft = useMemo(() => d3.axisLeft(scaleIncome)\r\n        .tickFormat(d3.format(\".3s\"))\r\n        , [scaleIncome]);\r\n    const axisIncomeRight = useMemo(() => d3.axisRight(scaleIncome), [scaleIncome]);\r\n    const axisTaxRate = useMemo(() => d3.axisBottom(scaleTaxRate).tickFormat(d3.format('.0%'))\r\n        , [scaleTaxRate]);\r\n\r\n    const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n\r\n    const generateTaxBracketsPathD = d => {\r\n        let pathD = 'M 0 0 ';\r\n        pathD += taxBrackets.map((d) => {\r\n            return ''\r\n                + `L ${scaleTaxRate(d.taxRate)} ${scaleIncome(d.minNetIncome)} `\r\n                + `L ${scaleTaxRate(d.taxRate)} ${scaleIncome(d.maxNetIncome)} `\r\n        }).join('')\r\n        pathD += `L 0 ${scaleIncome(taxBrackets[taxBrackets.length - 1].maxNetIncome)} `\r\n        pathD += `Z`\r\n        return pathD;\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (d3Container.current) {\r\n\r\n            const svg = d3.select(d3Container.current);\r\n\r\n            svg.select('g.container')\r\n                .attr('transform', `translate(${padding.left}, ${padding.bottom})`);\r\n\r\n            svg.select('rect.net-income')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#08f')\r\n                .attr('height', Math.max(0, scaleIncome(netIncome)));\r\n\r\n            svg.select('rect.net-income-mask')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                // .style('fill', '#08f')\r\n                .attr('height', Math.max(0, scaleIncome(netIncome)));\r\n\r\n            console.log('netIncome + cleanedAllowance', netIncome + cleanedAllowance, cleanedAllowance, scaleIncome(cleanedAllowance))\r\n            svg.select('rect.expense')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#135')\r\n                .attr('y', scaleIncome(netIncome + cleanedAllowance))\r\n                .attr('height', Math.max(0, scaleIncome(cleanedExpense)));\r\n\r\n            svg.select('rect.allowance')\r\n                .attr('width', barWidth)\r\n                .transition().duration(transitionDuration)\r\n                .style('fill', '#147')\r\n                .attr('y', scaleIncome(netIncome))\r\n                .attr('height', Math.max(0, scaleIncome(cleanedAllowance)));\r\n\r\n            svg.select('text.net-income-text')\r\n                .text(`เงินได้สุทธิ`)// ${numberWithCommas(netIncome)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(netIncome / 2));\r\n\r\n            svg.select('text.net-expense-text')\r\n                .text(`ค่าลดหย่อน`)// ${numberWithCommas(allowance)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(netIncome + cleanedAllowance / 2));\r\n\r\n            svg.select('text.net-allowance-text')\r\n                .text(`ค่าใช้จ่าย`)// ${numberWithCommas(expense)} บาท`)\r\n                .attr('x', barWidth / 2)\r\n                .attr('y', -scaleIncome(income - expense / 2));\r\n\r\n            svg.select('path.tax-stairs-camouflage')\r\n                .attr('fill', '#222')\r\n                .transition().duration(transitionDuration)\r\n                .attr('d', generateTaxBracketsPathD)\r\n\r\n            svg.select('path.tax-stairs')\r\n                .attr('fill', '#f80')\r\n                .transition().duration(transitionDuration)\r\n                .attr('d', generateTaxBracketsPathD)\r\n                .attr('transform', isPullTax ? `translate(${-50}, 0)` : 'translate(0, 0)')\r\n                .style('opacity', isPullTax ? 0 : 1);\r\n\r\n            const bracketLineGroups = svg.select('g.tax-lines')\r\n                .selectAll('g')\r\n                .data(taxBrackets)\r\n\r\n            const bracketLineGroupsEnter = bracketLineGroups\r\n                .enter()\r\n                .append('g')\r\n                .classed('bracket', true)\r\n\r\n            bracketLineGroupsEnter.append('text').classed('bracket-rate-text', true)\r\n            bracketLineGroupsEnter.append('text').classed('bracket-min-text', true)\r\n            bracketLineGroupsEnter.append('rect').classed('bracket-rect', true)\r\n            bracketLineGroupsEnter.append('line').classed('bracket-line', true)\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('rect')\r\n                .attr('x', 0)   // d => scaleTaxRate(d.taxRate))\r\n                .attr('width', d => scaleTaxRate(d.taxRate))\r\n                .style('fill-opacity', 0)\r\n                .style('stroke', '#f80')\r\n                .style(\"stroke-dasharray\", \"3, 3\")\r\n                .transition().duration(transitionDuration)\r\n                .attr('y', d => scaleIncome(d.minNetIncome))\r\n                .attr('height', d => scaleIncome(d.maxNetIncome - d.minNetIncome))\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('line')\r\n                .attr('x1', 0)\r\n                .attr('x2', barWidth)\r\n                .style('stroke', '#f80')\r\n                .style(\"stroke-dasharray\", \"3, 3\")\r\n                .transition().duration(transitionDuration)\r\n                // .style('stroke-opacity', '0.4')\r\n                .attr('y1', d => scaleIncome(d.maxNetIncome))\r\n                .attr('y2', d => scaleIncome(d.maxNetIncome))\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('text.bracket-rate-text')\r\n                .style('fill', '#fff')\r\n                .style('font-size', '0.75rem')\r\n                .style('text-anchor', 'end')\r\n                .attr('x', barWidth - 5)\r\n                .transition().duration(transitionDuration)\r\n                .text(d => `เริ่มคิดที่ ${numberWithCommas(d.minNetIncome)} บาท`)\r\n                .style('fill-opacity', (d, i) => i != 0 && scaleIncome(d.maxNetIncome - d.minNetIncome) > 20 ? 1 : 0)\r\n                .attr('y', d => -scaleIncome(d.minNetIncome) - 5)\r\n\r\n            bracketLineGroups.merge(bracketLineGroupsEnter)\r\n                .select('text.bracket-min-text')\r\n                .style('fill', '#fff')\r\n                .style('font-size', '0.75rem')\r\n                .attr('x', d => scaleTaxRate(d.taxRate) + 5)\r\n                .transition().duration(transitionDuration)\r\n                .text(d => `ภาษี ${d.taxRate * 100}%`)\r\n                // .text(d => scaleIncome(d.maxNetIncome - d.minNetIncome) > 150\r\n                //     ? `เริ่มคิดที่ ${numberWithCommas(d.minNetIncome)} บาท`\r\n                //     : `${d.taxRate * 100}%`)\r\n                .style('fill-opacity', (d, i) => i != 0 && scaleIncome(d.maxNetIncome - d.minNetIncome) > 20 ? 1 : 0)\r\n                .attr('y', d => -scaleIncome(d.minNetIncome) - 5)\r\n\r\n            // AXES\r\n\r\n            d3.select(\"g.axis-income-bottom\")\r\n                .attr(\"transform\", `translate(0, 0)`)\r\n                .transition().duration(transitionDuration)\r\n                .call(axisIncomeLeft);\r\n\r\n            d3.select(\"g.axis-tax-rate\")\r\n                // .attr(\"transform\", `translate(-10, 0)`)\r\n                .transition().duration(transitionDuration)\r\n                .call(axisTaxRate);\r\n        }\r\n    }, [\r\n        width, height,\r\n        d3Container,\r\n        isPullTax,\r\n        barWidth,\r\n        scaleIncome,\r\n        netIncome,\r\n        income,\r\n        expense,\r\n        allowance,\r\n        taxBrackets,\r\n        padding,\r\n        axisIncomeLeft,\r\n        axisIncomeRight,\r\n        axisTaxRate,\r\n        cleanedAllowance,\r\n        cleanedExpense,\r\n        scaleTaxRate\r\n    ]);\r\n\r\n    return (<>\r\n        <SvgContainer ref={observe}>\r\n            <Fade />\r\n            <CartesianSvg\r\n                id=\"chart\"\r\n                className=\"d3-component\"\r\n                width={width}\r\n                height={height}\r\n                ref={d3Container}\r\n            >\r\n                <defs>\r\n                    <clipPath id=\"net-income-mask\">\r\n                        <rect className=\"net-income-mask\" />\r\n                    </clipPath>\r\n                </defs>\r\n                <g transform={`translate(0, ${height}) scale(1, -1)`}>\r\n                    <g className=\"container\">\r\n                        <rect className=\"net-income\" />\r\n                        <rect className=\"expense\" />\r\n                        <rect className=\"allowance\" />\r\n                        <text className=\"net-income-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <text className=\"net-expense-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <text className=\"net-allowance-text\" style={{\r\n                            fill: '#fff', fontSize: '0.75rem', alignmentBaseline: 'middle', textAnchor: 'middle', fillOpacity: 0.4\r\n                        }} />\r\n                        <g className=\"tax-lines\" />\r\n                        <g className=\"axis-income-top\" />\r\n                        <g className=\"axis-income-bottom\" />\r\n                        <g className=\"axis-tax-rate\" />\r\n                        <path className=\"tax-stairs-camouflage\" clip-path=\"url(#net-income-mask)\" onClick={() => setPullTax(false)} />\r\n                        <path className=\"tax-stairs\" clip-path=\"url(#net-income-mask)\" onClick={() => setPullTax(!isPullTax)} />\r\n                    </g>\r\n                </g>\r\n            </CartesianSvg>\r\n        </SvgContainer>\r\n    </>);\r\n}","export const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n","import { useMemo, useState } from \"react\";\nimport { D3Component } from \"./components/D3Component\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { numberWithCommas } from \"./utils/display\";\n\nconst ChartContainer = styled.div`\n  /* padding: 30px; */\n  width: 100%;\n  /* height: 50vh; */\n  flex: 1;\n  position: relative;\n`;\n\nconst SideContainer = styled.div``;\n\nconst PageContainer = styled.div`\n  padding: 30px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    padding: 50px;\n  }\n`;\n\nconst ControlsContainer = styled.div`\n  /* margin-top: 30px; */\n  display: grid;\n  grid-template-columns: auto auto 80px;\n  column-gap: 10px;\n  row-gap: 15px;\n  flex-direction: column;\n  /* margin-bottom: 30px; */\n  align-content: center;\n\n  @media (min-width: 768px) {\n    margin-left: 80px;\n    width: 400px;\n    max-width: 40%;\n  }\n\n  label {\n    white-space: nowrap;\n  }\n`;\n\nconst InputGroup = styled.div`\n  /* margin-bottom: 10px; */\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  const [income, setIncome] = useState(480000);\n  const [expense, setExpense] = useState(100000);\n  const [allowance, setAllowance] = useState(60000);\n  const [enableTransition, setEnableTransition] = useState(true);\n\n  const netIncome = useMemo(() => {\n    return income - expense - allowance;\n  }, [income, expense, allowance]);\n\n  const [isPullTax, setPullTax] = useState(false);\n\n  const taxBrackets = [\n    {\n      minNetIncome: 0,\n      maxNetIncome: 150000,\n      taxRate: 0,\n    },\n    {\n      minNetIncome: 150000,\n      maxNetIncome: 300000,\n      taxRate: 0.05,\n    },\n    {\n      minNetIncome: 300000,\n      maxNetIncome: 500000,\n      taxRate: 0.1,\n    },\n    {\n      minNetIncome: 500000,\n      maxNetIncome: 750000,\n      taxRate: 0.15,\n    },\n    {\n      minNetIncome: 750000,\n      maxNetIncome: 1000000,\n      taxRate: 0.2,\n    },\n    {\n      minNetIncome: 1000000,\n      maxNetIncome: 2000000,\n      taxRate: 0.25,\n    },\n    {\n      minNetIncome: 2000000,\n      maxNetIncome: 5000000,\n      taxRate: 0.3,\n    },\n    {\n      minNetIncome: 5000000,\n      maxNetIncome: 999999999999,\n      taxRate: 0.35,\n    },\n  ];\n\n  const taxFinal = useMemo(() => {\n    let sumTax = 0;\n    let remainingNetIncome = netIncome;\n    for (let i in taxBrackets) {\n      let bracketRange =\n        taxBrackets[i].maxNetIncome - taxBrackets[i].minNetIncome;\n      let incomeInBracket = Math.min(remainingNetIncome, bracketRange);\n      let taxInBracket = incomeInBracket * taxBrackets[i].taxRate;\n      sumTax += taxInBracket;\n      remainingNetIncome -= bracketRange;\n      if (remainingNetIncome <= 0) break;\n    }\n    return sumTax;\n  }, [netIncome]);\n\n  return (\n    <PageContainer>\n      <ChartContainer>\n        <D3Component\n          income={income}\n          expense={expense}\n          allowance={allowance}\n          taxBrackets={taxBrackets}\n          isPullTax={isPullTax}\n          setPullTax={setPullTax}\n          enableTransition={enableTransition}\n        />\n      </ChartContainer>\n      <SideContainer>\n        <ControlsContainer>\n          <label>รายได้</label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"10000000\"\n            value={income}\n            onChange={(e) => setIncome(e.target.value)}\n            onMouseDown={() => setEnableTransition(false)}\n            onMouseUp={() => setEnableTransition(true)}\n          />\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={income}\n            onChange={(e) => setIncome(e.target.value)}\n          />\n\n          <label>ค่าใช้จ่าย</label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1000000\"\n            value={expense}\n            onChange={(e) => setExpense(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={expense}\n            onChange={(e) => setExpense(e.target.value)}\n          />\n\n          <label>ค่าลดหย่อน</label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1000000\"\n            value={allowance}\n            onChange={(e) => setAllowance(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            step={10000}\n            min={0}\n            value={allowance}\n            onChange={(e) => setAllowance(e.target.value)}\n          />\n        </ControlsContainer>\n        <div style={{ display: \"flex\", marginTop: \"20px\" }}>\n          <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n            <small>เงินได้สุทธิ</small>\n            <br />\n            <b>{numberWithCommas(netIncome)} ฿</b>\n          </div>\n          <div style={{ flexGrow: 1, flexBasis: 0, textAlign: \"center\" }}>\n            <small>ภาษี</small>\n            <br />\n            <b>{numberWithCommas(taxFinal)} ฿</b>\n          </div>\n        </div>\n      </SideContainer>\n    </PageContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}